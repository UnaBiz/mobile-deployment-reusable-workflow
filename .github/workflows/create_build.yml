name: Create EAS build

on:
  workflow_call:
    secrets:
      EXPO_TOKEN:
        required: true
      PAT:
        required: true

jobs:
  retrieve-env:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve Environment
        id: retrieve-env
        shell: bash
        run: |
          ENV="production"
          if [[ "${GITHUB_REF#refs/heads/}" == *"release-staging-v"* ]]; then
            ENV="staging"
          fi
          echo "${GITHUB_REF#refs/heads/}"
          echo "${ENV}"
          echo "##[set-output name=env;]$(echo ${ENV})"
    outputs:
      env: ${{ steps.retrieve-env.outputs.env }}
  build-app:
    runs-on: ubuntu-latest
    needs: [retrieve-env]

    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: yarn

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: |
          echo '@unabiz:registry=https://npm.pkg.github.com' > ${{ github.workspace }}/.npmrc
          echo '//npm.pkg.github.com/:_authToken=${{ secrets.PAT }}' >> ${{ github.workspace }}/.npmrc
          yarn install

      - name: 🚀 Create EAS Channel
        env: 
          ENV: ${{ needs.retrieve-env.outputs.env }}
        run: |
         eas project:info
         CHANNEL=$(cat eas.json | jq ".build.production.channel")
         eas channel:create "$CHANNEL" || echo "EAS Channel already existing"
         eas channel:edit "$CHANNEL" --branch "master" || echo "EAS Channel already assigned"

      - name: 🚀 Build app
        env: 
          ENV: ${{ needs.retrieve-env.outputs.env }}
        run: eas build --auto-submit  --no-wait --non-interactive --platform all --profile $ENV